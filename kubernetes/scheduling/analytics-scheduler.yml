apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics
  namespace: url-shortener
  labels:
    app: analytics
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: analytics
  template:
    metadata:
      labels:
        app: analytics
        tier: backend
    spec:
      serviceAccountName: analytics-sa
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - analytics
              topologyKey: kubernetes.io/hostname
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 60
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - cassandra
              topologyKey: kubernetes.io/hostname
          - weight: 40
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - postgres
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 70
            preference:
              matchExpressions:
              - key: node-performance
                operator: In
                values:
                - high
                - premium
          - weight: 50
            preference:
              matchExpressions:
              - key: storage-type
                operator: In
                values:
                - ssd
                - nvme
          - weight: 30
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: Exists
      containers:
      - name: analytics
        image: rodrigoorlandini/urlshortener-analytics
        ports:
        - containerPort: 8081
        env:
        - name: API_PORT
          value: "8081"
        - name: DATABASE_URL
          value: "postgresql://postgres:postgres@postgres.url-shortener-dev.svc.cluster.local:5432/analytics"
        - name: NATS_HOST
          value: "nats://nats.url-shortener.svc.cluster.local:4222"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m" 